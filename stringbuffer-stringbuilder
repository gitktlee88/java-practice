String vs StringBuffer vs StringBuilder

1, String is immutable whereas StringBuffer and StringBuider are mutable classes.
2, StringBuffer is thread safe and synchronized whereas StringBuilder is not, thats why 
   StringBuilder is more faster than StringBuffer.
3, String concat + operator internally uses StringBuffer or StringBuilder class.

For String manipulations in non-multi threaded environment, we should use StringBuilder 
else use StringBuffer class.


/*
 *  3 different ways to remove single character from a String
 *  
String str = "M1y java8 Progr5am";

//deleteCharAt()

StringBuilder build = new StringBuilder(str);
System.out.println("Pre Builder : " + build);
    build.deleteCharAt(1);  // Shift the positions front.
    build.deleteCharAt(8-1);
    build.deleteCharAt(15-2);
System.out.println("Post Builder : " + build);


//replace()

StringBuffer buffer = new StringBuffer(str);
    buffer.replace(1, 2, ""); // Shift the positions front.
    buffer.replace(7, 8, "");
    buffer.replace(13, 14, "");
System.out.println("Buffer : "+buffer);


//char[]

char[] c = str.toCharArray();
String new_Str = "";
    for (int i = 0; i < c.length; i++) {
        if (!(i == 1 || i == 8 || i == 15)) 
            new_Str += c[i];
    }
System.out.println("Char Array : "+new_Str);

 */
 
 
